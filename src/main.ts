import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import * as express from 'express';
import { join } from 'path'; // Import path
import * as dotenv from 'dotenv'; // Import dotenv
import { NestExpressApplication } from '@nestjs/platform-express'; // Import NestExpressApplication
import * as session from 'express-session'; // Import express-session
import * as passport from 'passport'; // Import passport
import * as cookieParser from 'cookie-parser';

async function bootstrap() {
  // T·∫£i bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
  dotenv.config();

  // T·∫°o ·ª©ng d·ª•ng v·ªõi NestExpressApplication
  const app = await NestFactory.create<NestExpressApplication>(AppModule);

  // Ph·ª•c v·ª• ·∫£nh t·ª´ th∆∞ m·ª•c public/uploads
  app.use(
    '/uploads',
    express.static(join(__dirname, '..', 'public/uploads/images')),
  );

  // session
  app.use(
    session({
      secret: process.env.SESSION_SECRET || 'session-secret',
      resave: false,
      saveUninitialized: false,
      cookie: { maxAge: 24 * 60 * 60 * 1000, httpOnly: true, secure: false },
    }),
  );

  app.use(passport.initialize());
  app.use(passport.session());

  //ch·ªâ ƒë·ªãnh cookie-parser
  app.use(cookieParser()); // üëà Th√™m d√≤ng n√†y

  // C·∫•u h√¨nh EJS
  app.setViewEngine('ejs');

  // ƒê·∫∑t th∆∞ m·ª•c ch·ª©a c√°c file view (template)
  app.setBaseViewsDir(join(__dirname, 'views'));

  // ‚úÖ B·∫≠t CORS ƒë·ªÉ cho ph√©p Frontend truy c·∫≠p API t·ª´ domain kh√°c
  app.enableCors({
    origin: 'http://localhost:3000', // Cho ph√©p frontend g·ªçi API
    credentials: true, // Cho ph√©p g·ª≠i cookies & authentication token
    allowedHeaders: ['Content-Type', 'Authorization', 'token'], // Cho ph√©p header `token`
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'], // Cho ph√©p c√°c method
  });

  // L·∫Øng nghe c·ªïng ƒë∆∞·ª£c c·∫•u h√¨nh trong .env ho·∫∑c m·∫∑c ƒë·ªãnh l√† 8000
  await app.listen(process.env.PORT ?? 8000);
}

bootstrap();
